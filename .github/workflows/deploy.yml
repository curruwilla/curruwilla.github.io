# Nome da sua Action no GitHub
name: Deploy Astro to GitHub Pages

on:
  # O pipeline rodará sempre que houver um push na branch principal (main ou master)
  push:
    branches:
      - master # Mude para 'master' se for o nome da sua branch principal

  # Permite que você rode o pipeline manualmente no painel do GitHub Actions
  workflow_dispatch:

# Permissões necessárias para que a Action publique no GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Define o job de deploy
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Clona o repositório
      - name: Checkout
        uses: actions/checkout@v4

      # Passo 2: Configura o Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm' # Usa cache para acelerar a instalação das dependências

      # Passo 3: Instala as dependências
      - name: Install dependencies
        run: npm install

      # Passo 4: Roda o Build do Astro
      # O comando 'npm run build' usa o script definido no seu package.json
      - name: Build Astro Site
        run: npm run build
        # A pasta de saída do Astro (outDir) por padrão é 'dist'

      # Passo 5: Configura o ambiente de deploy do GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Passo 6: Carrega a pasta gerada (dist) como artefato
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # A pasta 'dist' contém o site compilado
          path: './dist' 

      # Passo 7: Faz o Deploy no GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4